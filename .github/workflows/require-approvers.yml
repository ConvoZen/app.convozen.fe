name: Require Branch Approvers

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  check-approvers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Load approvers config
        id: config
        run: |
          echo "CONFIG=$(cat .github/branch-approvers.json | jq -c .)" >> $GITHUB_ENV

      - name: Check required approvers
        id: check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const config = JSON.parse(process.env.CONFIG);
            const pr = context.payload.pull_request;
            const branch = pr.base.ref;
            const requiredApprovers = config[branch] || [];

            if (requiredApprovers.length === 0) {
              core.info(`No approvers defined for branch ${branch}`);
              return;
            }

            // Get all reviews
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              per_page: 100
            });

            const approvedUsers = new Set(
              reviews.filter(r => r.state === "APPROVED").map(r => r.user.login.toLowerCase())
            );

            const missing = requiredApprovers.filter(u => !approvedUsers.has(u.toLowerCase()));

            if (missing.length > 0) {
              core.setFailed(
                `PR cannot be merged. Missing approvals from: ${missing.join(", ")}`
              );
            } else {
              core.info(`All required approvers for ${branch} have approved.`);
            }
